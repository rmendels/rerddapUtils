temp_df <- sf::st_transform(temp_df, crs = 4326)
sf::st_coordinates(temp_df)
latitude <- c(-140, -130)
longtiude <- c(-140, -130)
latitude <- c(20, 30)
devtools::load_all(".")
latlon_to_xy(myInfo, latitude, longitude)
longitude <- c(-140, -130)
latlon_to_xy(myInfo, latitude, longitude)
myURL <- 'https://polarwatch.noaa.gov/erddap/'
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(resp, yName = 'ygrid', xName = 'xgrid')
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
str(proj_extract)
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
datasetid
url()
url
base_url
datasetid
devtools::load_all(".")
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
test
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
library(dplyr)
library(duckdb)
library(duckplyr)
library(lubridate)
library(ncdf4)
library(rerddap)
library(rerddapUtils)
year <- '2023'
season <- c('02-01', '06-01')
# test that "season" is defined properly
test_time <- paste0(year, '-', season)
lubridate::as_datetime(test_time)
wind_info <- rerddap::info('erdQMekm14day')
season <- c('03-01', '05-01')
season_extract <- griddap_season(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
season = season
)
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "memory"
)
str(split_extract)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "nc"
)
wind_file <- ncdf4::nc_open(split_extract )
ncdf4::nc_close(wind_file)
wind_file
split_extract
wind_file <- ncdf4::nc_open(split_extract )
wind_file
ncdf4::nc_close(wind_file)
wind_file <- ncdf4::nc_open(split_extract )
ncdf4::nc_close(wind_file)
print(wind_file)
wind_file <- ncdf4::nc_open(split_extract )
wind_file
ncdf4::nc_close(wind_file)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "duckdb",
aggregate_file = 'wind_extract.duckdb'
)
con <- dbConnect(duckdb::duckdb(), "wind_extract.duckdb")
tbl(con, "extract") |>
head(5) |>
collect()
dbDisconnect(con)
proj_strings <- c('proj4string', 'proj_crs_code', 'proj4text', 'grid_mapping_epsg_code',
'grid_mapping_proj4', 'grid_mapping_proj4_params', 'grid_mapping_proj4text',
'WKT')
latitude <- c(20, 30)
longitude <- c(-140, -130)
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
longitude <- c(-140, -130)
coords <- latlon_to_xy(myInfo, latitude, longitude)
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
longitude <- c(-140, -130)
coords <- latlon_to_xy(myInfo, latitude, longitude)
coords
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(resp, yName = 'ygrid', xName = 'xgrid')
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
head(test)
devtools::load_all(".")
devtools::load_all(".")
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
install.packages(c("callr", "DT", "geostatsp", "ggforce", "GPvecchia", "usethis"))
devtools::load_all(".")
wind_info <- rerddap::info('erdQMekm14day')
season <- c('03-01', '04-05')
season_extract <- griddap_season(wind_info,
time = c('2015-01-28','2017-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
season = season
)
season_extract
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
source_file
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
destination_file
devtools::load_all(".")
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
devtools::load_all(".")
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
devtools::load_all(".")
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
destination_file
devtools::load_all(".")
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
destination_file
res
devtools::load_all(".")
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
devtools::load_all(".")
devtools::load_all(".")
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
devtools::check()
devtools::load_all(".")
devtools::check()
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "duckdb",
aggregate_file = 'wind_extract.duckdb'
)
devtools::load_all(".")
?file.exists
file,exists('junk.nc')
file.exists('junk.nc')
devtools::load_all(".")
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "duckdb",
aggregate_file = 'wind_extract.duckdb'
)
con <- dbConnect(duckdb::duckdb(), "wind_extract.duckdb")
tbl(con, "extract") |>
head(5) |>
collect()
library(dplyr)
con <- dbConnect(duckdb::duckdb(), "wind_extract.duckdb")
tbl(con, "extract") |>
head(5) |>
collect()
dbDisconnect(con)
devtools::load_all(".")
devtools::check()
library(dplyr)
library(duckdb)
library(duckplyr)
library(lubridate)
library(ncdf4)
library(rerddap)
library(rerddapUtils)
year <- '2023'
season <- c('02-01', '06-01')
# test that "season" is defined properly
test_time <- paste0(year, '-', season)
lubridate::as_datetime(test_time)
wind_info <- rerddap::info('erdQMekm14day')
season <- c('03-01', '05-01')
season_extract <- griddap_season(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
season = season
)
str(season_extract)
extract_times  <- lubridate::as_datetime(season_extract$data$time)
extract_months <- lubridate::month(extract_times)
unique(extract_months)
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
wind_info <- rerddap::info('erdQMekm14day')
extract <- rerddap::griddap(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current'
)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "memory"
)
str(split_extract)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "nc"
)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "nc",
aggregate_file = 'wind_extract.nc'
)
wind_file <- ncdf4::nc_open(split_extract )
wind_file
ncdf4::nc_close(wind_file)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2019-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "duckdb",
aggregate_file = 'wind_extract.duckdb'
)
wind_info <- rerddap::info('erdQMekm14day')
request_split <- list(time = 5, altitude = 1, latitude = 2, longitude = 2)
split_extract <- griddap_split(wind_info,
time = c('2015-01-01','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split,
fmt = "duckdb",
aggregate_file = 'wind_extract.duckdb'
)
con <- dbConnect(duckdb::duckdb(), "wind_extract.duckdb")
tbl(con, "extract") |>
head(5) |>
collect()
dbDisconnect(con, shutdown=TRUE)
latitude <- c(20, 30)
longitude <- c(-140, -130)
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
longitude <- c(-140, -130)
coords <- latlon_to_xy(myInfo, latitude, longitude)
coords
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
head(test)
devtools::load_all(".")
devtools::check()
library(rerddapUtils)
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
devtools::load_all(".")
devtools::load_all(".")
devtools::check(".")
devtools::load_all(".")
devtools::check(".")
devtools::load_all(".")
rerddap::cache_delete_all()
out <- rerddap::info('erdQMekm14day')
request_split <- list(time = 3, altitude = 1, latitude = 1, longitude = 1)
res <- griddap_split(out,
time = c('2015-12-28','2016-01-01'),
latitude = c(20, 40),
longitude = c(220, 240),
fields = 'mod_current',
request_split = request_split
)
res
devtools::check(".")
library(rerddap)
?griddap
devtools::load_all(".")
devtools::check(".")
devtools::load_all(".")
devtools::check(".")
devtools::load_all(".")
devtools::check(".")
install.packages("~/Workfiles/rerddapUtils_0.0.0.9000.tgz", repos = NULL, type = .Platform$pkgType)
library(usethis)
?usethis
use_readme_md()
library(remotes)
?remote
?remotes
?remotes-package
devtools::check()
devtools::build()
devtools::load_all(".")
xgrid <- c(-99772.5, -400282.5)
ygrid <- c(99772.5, 400282.)
proj_crs_code <- 'EPSG:3413'
temp_df <- data.frame(xgrid = xgrid,  ygrid = ygrid)
temp_df <- sf::st_as_sf(temp_df, coords = c('xgrid', 'ygrid'), crs = proj_crs_code[1])
temp_df <- sf::st_transform(temp_df, crs = 4326)
sf::st_coordinates(temp_df)
junk <- sf::st_coordinates(temp_df)
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
longitude <- c(-140, -130)
latlon_to_xy(myInfo, latitude, longitude)
myInfo <- rerddap::info('noaacwVIIRSn20iceconcNP06Daily', url = myURL)
junk
latlon_to_xy(myInfo, junk[, 2], junk[, 1])
junk[, 2]
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
?xy_to_latlon
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = 'https://polarwatch.noaa.gov/erddap/')
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
test
?latlon_to_xy
latlon_to_xy(myInfo, -82.45962, 141.2034 )
latlon_to_xy(myInfo, test[, 2], test[, 1])
str(test)
test[, 2]
latlon_to_xy(myInfo, test[1, 2], test[1, 1])
test[1, 2]
test[1, 1]
test
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = myURL)
latitude <- c(20, 30)
longitude <- c(-140, -130)
coords <- latlon_to_xy(myInfo, latitude, longitude)
coords
latitude <- c(-87, -85)
coords <- latlon_to_xy(myInfo, latitude, longitude)
coords
xgrid <- c(162500, 512500)
ygrid <- c(-437500,-637500)
xName <- 'xgrid'
yName <- 'ygrid'
myURL <- 'https://polarwatch.noaa.gov/erddap/'
myInfo <- rerddap::info('nsidcG02202v4sh1day', url = 'https://polarwatch.noaa.gov/erddap/')
proj_extract <- rerddap::griddap(myInfo,
time = c('2023-06-30T00:00:00Z', '2023-06-30T00:00:00Z'),
ygrid = ygrid,
xgrid = xgrid,
fields = 'cdr_seaice_conc',
url = myURL
)
test <- xy_to_latlon(proj_extract, yName = 'ygrid', xName = 'xgrid')
test
str(proj_extract)
cdr_seaice_conc
proj_extract$cdr_seaice_conc
proj_extract$data$cdr_seaice_conc
install.packages(c("arrow", "broom", "gbRd", "GeoModels", "ggiraph", "KernSmooth", "openssl", "rmarkdown"))
devtools::load_all(".")
